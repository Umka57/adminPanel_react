{"version":3,"sources":["Types/user.ts","Hooks/useTypeSelector.ts","Types/destinations.ts","Store/ActionCreator/users.ts","Store/ActionCreator/destinations.ts","Types/prorectors.ts","Store/ActionCreator/prorectors.ts","Types/structure.ts","Store/ActionCreator/structure.ts","Types/roles.ts","Store/ActionCreator/roles.ts","Types/positions.ts","Store/ActionCreator/positions.ts","Types/singleUser.ts","Store/ActionCreator/singleUser.ts","Types/university.ts","Store/ActionCreator/university.ts","Types/destinationValues.ts","Store/ActionCreator/destinationsValues.ts","Store/ActionCreator/index.ts","Hooks/useActions.ts","Components/Header/Menus/ProrectorsMenu.tsx","Components/Header/Menus/UniverMenu.tsx","Components/Header/Menus/StructureMenu.tsx","Components/Header/Header.tsx","Components/Charts/KPEDynamicTableQuarter.tsx","Components/Charts/KPETableCurrentDate.tsx","Components/Profile/Profile.tsx","Components/UsersPage/UsersPage.tsx","Store/Reducers/usersReducer.ts","Store/Reducers/destinationsReducer.ts","Store/Reducers/prorectorsReducer.ts","Store/Reducers/structureReducer.ts","Store/Reducers/rolesReducer.ts","Store/Reducers/positionsReducer.ts","Store/Reducers/singleUserReducer.ts","Store/Reducers/universityReducer.ts","Store/Reducers/destinationsValuesReducer.ts","Store/Reducers/index.ts","Store/index.ts","Components/CompositeStatistic/CompositeStatistic.tsx","App.tsx","index.tsx","Components/Header/Header.module.css","Components/Profile/Profile.module.css"],"names":["UserActionTypes","useTypedSelector","useSelector","DestinationsActionTypes","fetchUsers","dispatch","a","type","FETCH_USERS","axios","post","response","FETCH_USERS_SUCCESS","payload","data","FETCH_USERS_ERROR","ProrectorsActionType","fetchDestinations","id","FETCH_DESTINATIONS","FETCH_DESTINATIONS_SUCCESS","FETCH_DESTINATIONS_ERROR","pushDestinations","destination","PUSH_DESTINATIONS","userId","name","performance_indicator","performance_indicator_value","verification","year","plan","present_value","percent_completion","PUSH_DESTINATIONS_SUCCESS","PUSH_DESTINATIONS_ERROR","StructureActionTypes","fetchProrectors","FETCH_PRORECTORS","FETCH_PRORECTORS_SUCCESS","FETCH_PRORECTORS_ERROR","RolesActionTypes","fetchStructure","FETCH_STRUCTURE","FETCH_STRUCTURE_SUCCESS","FETCH_STRUCTURE_ERROR","PositionsActionTypes","fetchRoles","FETCH_ROLES","FETCH_ROLES_SUCCESS","FETCH_ROLES_ERROR","UserSingleActionTypes","fetchPositions","FETCH_POSITIONS","FETCH_POSITIONS_SUCCESS","FETCH_POSITIONS_ERROR","UniversityActionTypes","fetchUser","FETCH_SINGLE_USER","FETCH_SINGLE_USER_SUCCESS","FETCH_SINGLE_USER_ERROR","DestinationsValuesActionTypes","fetchUniversity","FETCH_UNIVERSITY","FETCH_UNIVERSITY_SUCCESS","FETCH_UNIVERSITY_ERROR","fetchDestinationsValues","idList","FETCH_DESTINATIONS_VALUES","map","push","console","log","FETCH_DESTINATIONS_VALUES_SUCCESS","FETCH_DESTINATIONS_VALUES_ERROR","pushDestinationsValues","destinationsValues","PUSH_DESTINATIONS_VALUES","quarter","week","value","is_verified","PUSH_DESTINATIONS_VALUES_SUCCESS","PUSH_DESTINATIONS_VALUES_ERROR","UserActionCreator","DestinationActionCreator","ProrectorsActionCreator","StructureActionCreator","RolesActionCreator","PositionsActionCreator","SingleUserActionCreator","UniversityActionCreator","DestinationsValuesActionCreator","useActions","useDispatch","bindActionCreators","ActionCreators","ProsMenu","React","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","state","prorectors","loading","error","useEffect","ButtonGroup","variant","color","ref","aria-label","Button","className","css","menu__navlink","navlink","to","size","aria-controls","undefined","aria-expanded","aria-haspopup","onClick","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","prorector","MenuItem","lastname","substr","patronymic","ProrectorsMenu","Component","UniverMenu","university","univer","UniversityMenu","StrMenu","structure","length","struct","StructureMenu","Header","AppBar","position","Toolbar","Typography","href","KPEDynamicTableQuarter","props","destinations","fetch_loading_destination","fetch_error_destination","destinationValues","concreteDestination","fetch_loading_destinations_values","fetch_error_destinations_values","filter","dest","user","setstate","setTimeout","result","fil","flat","forEach","item","idx","key","flatMap","Object","keys","chartType","width","height","loader","options","title","chartArea","legendToggle","KPETableCurrentDate","UserCard","useParams","loading_user","error_user","positions","loading_positions","error_positions","Card","card","Grid","container","spacing","CardMedia","photo","image","img_link","details","CardContent","xl","component","position_name","Profile","destfil","xs","columns","field","headerName","UsersTable","users","roles","error_roles","loading_roles","rows","Users","initialState","push_loading_destination","push_error_destination","userId_destination","push_loading_destinations_values","push_error_destinations_values","userId_destinations_values","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","AdvancedUserCard","selectedUser","find","CompositeStatistic","usertype","param","Array","App","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.525dcfd5.chunk.js","sourcesContent":["export interface User {\r\n    id: number,\r\n    lastname: string,\r\n    name: string ,\r\n    patronymic: string,\r\n    telephone: string,\r\n    email: string,\r\n    position: number,\r\n    role: number,\r\n    img_link: string,\r\n    img_is_local: boolean\r\n}\r\n\r\nexport interface UserState{\r\n    users:User[];\r\n    loading_user:boolean;\r\n    error_user:null | string;\r\n}\r\n\r\nexport enum UserActionTypes {\r\n    FETCH_USERS= \"FETCH_USERS\",\r\n    FETCH_USERS_SUCCESS= \"FETCH_USERS_SUCCESS\",\r\n    FETCH_USERS_ERROR= \"FETCH_USERS_ERROR\",\r\n}\r\ninterface FetchUserAction {\r\n    type: UserActionTypes.FETCH_USERS;\r\n}\r\ninterface FetchUserSuccessAction {\r\n    type: UserActionTypes.FETCH_USERS_SUCCESS;\r\n    payload: any[];\r\n}\r\ninterface FetchUserErrorAction {\r\n    type: UserActionTypes.FETCH_USERS_ERROR;\r\n    payload: string;\r\n}\r\nexport type UserAction = FetchUserAction | FetchUserSuccessAction | FetchUserErrorAction","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../Store/Reducers\";\r\n\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","interface Destination {\r\n    user: number,\r\n    id: number,\r\n    name: string,\r\n    performance_indicator: string,\r\n    verification_indicator_value: string,\r\n    verification: number,\r\n    year: number,\r\n    plan: string,\r\n    present_value: string,\r\n    percent_completion: string,\r\n}\r\n\r\nexport interface DestinationsState {\r\n    destinations: Destination[],\r\n    fetch_loading_destination: boolean,\r\n    fetch_error_destination: null | string,\r\n    push_loading_destination: boolean,\r\n    push_error_destination: null | string,\r\n    userId_destination: null | number\r\n}\r\n\r\nexport enum DestinationsActionTypes {\r\n    FETCH_DESTINATIONS = \"FETCH_DESTINATIONS\",\r\n    FETCH_DESTINATIONS_SUCCESS = \"FETCH_DESTINATIONS_SUCCESS\",\r\n    FETCH_DESTINATIONS_ERROR = \"FETCH_DESTINATIONS_ERROR\",\r\n    PUSH_DESTINATIONS = \"PUSH_DESTINATIONS\",\r\n    PUSH_DESTINATIONS_SUCCESS = \"PUSH_DESTINATIONS_SUCCESS\",\r\n    PUSH_DESTINATIONS_ERROR = \"PUSH_DESTINATIONS_ERROR\",\r\n}\r\n\r\ninterface FetchDestinationsAction {\r\n    type: DestinationsActionTypes.FETCH_DESTINATIONS;\r\n}\r\ninterface FetchDestinationsSuccessAction {\r\n    type: DestinationsActionTypes.FETCH_DESTINATIONS_SUCCESS;\r\n    payload: Destination[];\r\n}\r\ninterface FetchDestinationsErrorAction {\r\n    type: DestinationsActionTypes.FETCH_DESTINATIONS_ERROR;\r\n    payload: string;\r\n}\r\n\r\ninterface PushDestinationsAction {\r\n    type: DestinationsActionTypes.PUSH_DESTINATIONS;\r\n}\r\ninterface PushDestinationsSuccessAction {\r\n    type: DestinationsActionTypes.PUSH_DESTINATIONS_SUCCESS;\r\n    payload: Destination[];\r\n}\r\ninterface PushDestinationsErrorAction {\r\n    type: DestinationsActionTypes.PUSH_DESTINATIONS_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type DestinationsAction = FetchDestinationsAction\r\n    | FetchDestinationsSuccessAction\r\n    | FetchDestinationsErrorAction\r\n    | PushDestinationsAction\r\n    | PushDestinationsSuccessAction\r\n    | PushDestinationsErrorAction","import {UserAction, UserActionTypes} from \"../../Types/user\";\r\nimport {Dispatch} from \"redux\";\r\nimport {getUsers} from \"../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const fetchUsers = () => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n            dispatch({type: UserActionTypes.FETCH_USERS})\r\n            const response = await axios.post(\"/users.getPossible\" ,{\"positionId\":0,\"roleId\":0})\r\n            dispatch({type: UserActionTypes.FETCH_USERS_SUCCESS,payload:response.data.response})\r\n        } catch (e){\r\n            dispatch({type: UserActionTypes.FETCH_USERS_ERROR,payload:'Loading users error'})\r\n        }\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {destinationsGetPossible} from \"../../api\";\r\nimport {DestinationsAction, DestinationsActionTypes} from \"../../Types/destinations\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchDestinations = (id = null) => {\r\n    return async (dispatch: Dispatch<DestinationsAction>) => {\r\n        try {\r\n            dispatch({type: DestinationsActionTypes.FETCH_DESTINATIONS})\r\n            const response = await axios.post(\"/destinations.getPossible\", {\"userId\":id})\r\n            dispatch({type: DestinationsActionTypes.FETCH_DESTINATIONS_SUCCESS,payload:response.data.response})\r\n        } catch (e){\r\n            dispatch({type: DestinationsActionTypes.FETCH_DESTINATIONS_ERROR, payload: \"Ошибка загрузки назначений с сервера\"})\r\n        }\r\n    }\r\n}\r\n\r\nexport const pushDestinations = (destination:any = null) => {\r\n    return async (dispatch: Dispatch<DestinationsAction>) => {\r\n        try {\r\n            dispatch({type: DestinationsActionTypes.PUSH_DESTINATIONS})\r\n            const response = await axios.post(\"/destinations.create\",\r\n                {\r\n                    'user': destination.userId,\r\n                    'id': destination.id,\r\n                    'name': destination.name,\r\n                    'performance_indicator': destination.performance_indicator,\r\n                    'verification_indicator_value': destination.performance_indicator_value,\r\n                    'verification': destination.verification,\r\n                    'year': destination.year,\r\n                    'plan': destination.plan,\r\n                    'present_value': destination.present_value,\r\n                    'percent_completion': destination.percent_completion})\r\n            dispatch({type: DestinationsActionTypes.PUSH_DESTINATIONS_SUCCESS,payload:response.data})\r\n        } catch (e){\r\n            dispatch({type: DestinationsActionTypes.PUSH_DESTINATIONS_ERROR, payload: \"Ошибка загрузки назначений на сервер\"})\r\n        }\r\n    }\r\n}","interface Prorectors {\r\n    email: string,\r\n    id: number,\r\n    lastname: string,\r\n    name: string ,\r\n    patronymic: string,\r\n    position: number,\r\n    role: number\r\n    telephone: string,\r\n}\r\n\r\nexport interface ProrectorsState {\r\n    prorectors: Prorectors[],\r\n    loading: boolean,\r\n    error: null | string,\r\n}\r\n\r\nexport enum ProrectorsActionType {\r\n    FETCH_PRORECTORS = \"FETCH_PRORECTORS\",\r\n    FETCH_PRORECTORS_SUCCESS = \"FETCH_PRORECTORS_SUCCESS\",\r\n    FETCH_PRORECTORS_ERROR = \"FETCH_PRORECTORS_ERROR\",\r\n}\r\n\r\ninterface FetchProrectorsAction {\r\n    type: ProrectorsActionType.FETCH_PRORECTORS;\r\n}\r\ninterface FetchProrectorsSuccessAction {\r\n    type: ProrectorsActionType.FETCH_PRORECTORS_SUCCESS;\r\n    payload: any[];\r\n}\r\ninterface FetchProrectorsErrorAction {\r\n    type: ProrectorsActionType.FETCH_PRORECTORS_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type ProrectorsAction = FetchProrectorsAction | FetchProrectorsSuccessAction | FetchProrectorsErrorAction","import {Dispatch} from \"redux\";\r\nimport {getProrectors} from \"../../api\";\r\nimport {ProrectorsAction, ProrectorsActionType} from \"../../Types/prorectors\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchProrectors = () => {\r\n    return async (dispatch: Dispatch<ProrectorsAction>) => {\r\n        try {\r\n            dispatch({type: ProrectorsActionType.FETCH_PRORECTORS})\r\n            const response = await axios.post(\"/users.getPossible\", {\"positionId\":2,\"roleId\":2})\r\n            dispatch({type: ProrectorsActionType.FETCH_PRORECTORS_SUCCESS,payload:response.data.response})\r\n        } catch (e){\r\n            dispatch({type: ProrectorsActionType.FETCH_PRORECTORS_ERROR,payload:'Ошибка в загрузке списка проректоров'})\r\n        }\r\n    }\r\n}","interface Structure {\r\n    email: string,\r\n    id: number,\r\n    lastname: string,\r\n    name: string ,\r\n    patronymic: string,\r\n    position: number,\r\n    role: number\r\n    telephone: string,\r\n}\r\nexport interface StructureState {\r\n    structure: Structure[],\r\n    loading: boolean,\r\n    error: null | string\r\n}\r\n\r\nexport enum StructureActionTypes {\r\n    FETCH_STRUCTURE = \"FETCH_STRUCTURE\",\r\n    FETCH_STRUCTURE_SUCCESS = \"FETCH_STRUCTURE-SUCCESS\",\r\n    FETCH_STRUCTURE_ERROR = \"FETCH_STRUCTURE-ERROR\",\r\n}\r\n\r\ninterface FetchStructureAction {\r\n    type: StructureActionTypes.FETCH_STRUCTURE;\r\n}\r\n\r\ninterface FetchStructureSuccessAction{\r\n    type: StructureActionTypes.FETCH_STRUCTURE_SUCCESS;\r\n    payload: any[]\r\n}\r\n\r\ninterface FetchStructuresErrorAction {\r\n    type: StructureActionTypes.FETCH_STRUCTURE_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type StructureAction = FetchStructureAction | FetchStructureSuccessAction | FetchStructuresErrorAction","import {StructureAction, StructureActionTypes} from \"../../Types/structure\";\r\nimport {Dispatch} from \"react\";\r\nimport {getStruct} from \"../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const fetchStructure = () => {\r\n    return async (dispatch: Dispatch<StructureAction>) => {\r\n        try{\r\n            dispatch({type: StructureActionTypes.FETCH_STRUCTURE})\r\n            const response = await axios.post(\"/users.getPossible\",{'positionId':3,'roleId':2})\r\n            dispatch({type: StructureActionTypes.FETCH_STRUCTURE_SUCCESS, payload:response.data.response})\r\n        } catch (e) {\r\n            dispatch({type: StructureActionTypes.FETCH_STRUCTURE_ERROR, payload: \"Ошибка загрузки структурных работников\"})\r\n        }\r\n    }\r\n}","interface Roles {\r\n    id: number,\r\n    role_name: string\r\n}\r\nexport interface RolesState {\r\n    roles: Roles[],\r\n    loading_roles: boolean,\r\n    error_roles: null | string\r\n}\r\n\r\nexport enum RolesActionTypes {\r\n    FETCH_ROLES = \"FETCH_ROLES\",\r\n    FETCH_ROLES_SUCCESS = \"FETCH_ROLES-SUCCESS\",\r\n    FETCH_ROLES_ERROR = \"FETCH_ROLES-ERROR\"\r\n}\r\ninterface FetchRolesAction {\r\n    type: RolesActionTypes.FETCH_ROLES;\r\n}\r\n\r\ninterface FetchRolesSuccessAction{\r\n    type: RolesActionTypes.FETCH_ROLES_SUCCESS;\r\n    payload: any[]\r\n}\r\n\r\ninterface FetchRolesErrorAction {\r\n    type: RolesActionTypes.FETCH_ROLES_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type RolesAction = FetchRolesAction | FetchRolesSuccessAction | FetchRolesErrorAction","import {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {RolesAction, RolesActionTypes} from \"../../Types/roles\";\r\n\r\nexport const fetchRoles = () => {\r\n    return async (dispatch: Dispatch<RolesAction>) => {\r\n        try {\r\n            dispatch({type: RolesActionTypes.FETCH_ROLES})\r\n            const response = await axios.post(\"/roles.getPossible\")\r\n            dispatch({type: RolesActionTypes.FETCH_ROLES_SUCCESS, payload: response.data.response})\r\n        } catch (e) {\r\n            dispatch({type: RolesActionTypes.FETCH_ROLES_ERROR, payload: 'Ошибка в загрузке ролей'})\r\n        }\r\n    }\r\n}","interface Positions {\r\n    id: number,\r\n    position_name: string\r\n}\r\nexport interface PositionsState {\r\n    positions: Positions[],\r\n    loading_positions: boolean,\r\n    error_positions: null | string\r\n}\r\n\r\nexport enum PositionsActionTypes {\r\n    FETCH_POSITIONS = \"FETCH_POSITIONS\",\r\n    FETCH_POSITIONS_SUCCESS = \"FETCH_POSITIONS-SUCCESS\",\r\n    FETCH_POSITIONS_ERROR = \"FETCH_POSITIONS-ERROR\"\r\n}\r\ninterface FetchPositionsAction {\r\n    type: PositionsActionTypes.FETCH_POSITIONS;\r\n}\r\n\r\ninterface FetchPositionsSuccessAction{\r\n    type: PositionsActionTypes.FETCH_POSITIONS_SUCCESS;\r\n    payload: any[]\r\n}\r\n\r\ninterface FetchPositionsErrorAction {\r\n    type: PositionsActionTypes.FETCH_POSITIONS_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type PositionsAction = FetchPositionsAction | FetchPositionsSuccessAction | FetchPositionsErrorAction","import {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {PositionsAction, PositionsActionTypes} from \"../../Types/positions\";\r\n\r\nexport const fetchPositions = () => {\r\n    return async (dispatch: Dispatch<PositionsAction>) => {\r\n        try {\r\n            dispatch({type: PositionsActionTypes.FETCH_POSITIONS})\r\n            const response = await axios.post(\"/positions.getPossible\")\r\n            dispatch({type: PositionsActionTypes.FETCH_POSITIONS_SUCCESS, payload: response.data.response})\r\n        } catch (e) {\r\n            dispatch({type: PositionsActionTypes.FETCH_POSITIONS_ERROR, payload: 'Ошибка в загрузке должностей'})\r\n        }\r\n    }\r\n}","interface User {\r\n    id: number,\r\n    lastname: string,\r\n    name: string ,\r\n    patronymic: string,\r\n    telephone: string,\r\n    email: string,\r\n    position: number,\r\n    role: number,\r\n    img_link: string,\r\n    img_is_local: boolean\r\n}\r\n\r\nexport interface UserSingleState{\r\n    user?:User;\r\n    loading_user:boolean;\r\n    error_user:null | string;\r\n}\r\n\r\nexport enum UserSingleActionTypes {\r\n    FETCH_SINGLE_USER= \"FETCH_SINGLE_USER\",\r\n    FETCH_SINGLE_USER_SUCCESS= \"FETCH_SINGLE_USER_SUCCESS\",\r\n    FETCH_SINGLE_USER_ERROR= \"FETCH_SINGLE_USER_ERROR\",\r\n}\r\ninterface FetchUserSingleAction {\r\n    type: UserSingleActionTypes.FETCH_SINGLE_USER;\r\n}\r\ninterface FetchUserSingleSuccessAction {\r\n    type: UserSingleActionTypes.FETCH_SINGLE_USER_SUCCESS;\r\n    payload: any;\r\n}\r\ninterface FetchUserSingleErrorAction {\r\n    type: UserSingleActionTypes.FETCH_SINGLE_USER_ERROR;\r\n    payload: string;\r\n}\r\nexport type UserSingleAction = FetchUserSingleAction | FetchUserSingleSuccessAction | FetchUserSingleErrorAction","import {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {UserSingleAction, UserSingleActionTypes} from \"../../Types/singleUser\";\r\n\r\nexport const fetchUser = (id=0) => {\r\n    return async (dispatch: Dispatch<UserSingleAction>) => {\r\n        try {\r\n            dispatch({type: UserSingleActionTypes.FETCH_SINGLE_USER})\r\n            const response = await axios.post(\"/users.get\" ,{\"userId\":id})\r\n            dispatch({type: UserSingleActionTypes.FETCH_SINGLE_USER_SUCCESS,payload:response.data})\r\n        } catch (e){\r\n            dispatch({type: UserSingleActionTypes.FETCH_SINGLE_USER_ERROR,payload:'Loading user error'})\r\n        }\r\n    }\r\n}","interface University {\r\n    email: string,\r\n    id: number,\r\n    lastname: string,\r\n    name: string ,\r\n    patronymic: string,\r\n    position: number,\r\n    role: number\r\n    telephone: string,\r\n}\r\nexport interface UniversityState {\r\n    university: University[],\r\n    loading: boolean,\r\n    error: null | string\r\n}\r\n\r\nexport enum UniversityActionTypes {\r\n    FETCH_UNIVERSITY = \"FETCH_UNIVERSITY\",\r\n    FETCH_UNIVERSITY_SUCCESS = \"FETCH_UNIVERSITY-SUCCESS\",\r\n    FETCH_UNIVERSITY_ERROR = \"FETCH_UNIVERSITY-ERROR\",\r\n}\r\n\r\ninterface FetchUniversityAction {\r\n    type: UniversityActionTypes.FETCH_UNIVERSITY;\r\n}\r\n\r\ninterface FetchUniversitySuccessAction{\r\n    type: UniversityActionTypes.FETCH_UNIVERSITY_SUCCESS;\r\n    payload: any[]\r\n}\r\n\r\ninterface FetchUniversityErrorAction {\r\n    type: UniversityActionTypes.FETCH_UNIVERSITY_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type UniversityAction = FetchUniversityAction | FetchUniversitySuccessAction | FetchUniversityErrorAction","import {Dispatch} from \"react\";\r\nimport axios from \"axios\";\r\nimport {UniversityAction, UniversityActionTypes} from \"../../Types/university\";\r\n\r\n\r\nexport const fetchUniversity = () => {\r\n    return async (dispatch: Dispatch<UniversityAction>) => {\r\n        try{\r\n            dispatch({type: UniversityActionTypes.FETCH_UNIVERSITY})\r\n            const response = await axios.post(\"/users.getPossible\",{'positionId':5,'roleId':2})\r\n            dispatch({type: UniversityActionTypes.FETCH_UNIVERSITY_SUCCESS, payload:response.data.response})\r\n        } catch (e) {\r\n            dispatch({type: UniversityActionTypes.FETCH_UNIVERSITY_ERROR, payload: \"Ошибка загрузки универститетских директоров\"})\r\n        }\r\n    }\r\n}","interface DestinationValues {\r\n    id: number,\r\n    destination: number,\r\n    quarter: number,\r\n    week: number,\r\n    value: number,\r\n    is_verified: number\r\n}\r\n\r\nexport interface DestinationsValuesState {\r\n    destinationValues: DestinationValues[],\r\n    fetch_loading_destinations_values: boolean,\r\n    fetch_error_destinations_values: null | string,\r\n    push_loading_destinations_values: boolean,\r\n    push_error_destinations_values: null | string,\r\n    userId_destinations_values: null | number\r\n}\r\n\r\nexport enum DestinationsValuesActionTypes {\r\n    FETCH_DESTINATIONS_VALUES = \"FETCH_DESTINATIONS_VALUES\",\r\n    FETCH_DESTINATIONS_VALUES_SUCCESS = \"FETCH_DESTINATIONS_VALUES_SUCCESS\",\r\n    FETCH_DESTINATIONS_VALUES_ERROR = \"FETCH_DESTINATIONS_VALUES_ERROR\",\r\n    PUSH_DESTINATIONS_VALUES = \"PUSH_DESTINATIONS_VALUES\",\r\n    PUSH_DESTINATIONS_VALUES_SUCCESS = \"PUSH_DESTINATIONS_VALUES_SUCCESS\",\r\n    PUSH_DESTINATIONS_VALUES_ERROR = \"PUSH_DESTINATIONS_VALUES_ERROR\",\r\n}\r\n\r\ninterface FetchDestinationsValuesAction {\r\n    type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES;\r\n}\r\ninterface FetchDestinationsValuesSuccessAction {\r\n    type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_SUCCESS;\r\n    payload: DestinationValues[];\r\n}\r\ninterface FetchDestinationsValuesErrorAction {\r\n    type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_ERROR;\r\n    payload: string;\r\n}\r\n\r\ninterface PushDestinationsValuesAction {\r\n    type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES;\r\n}\r\ninterface PushDestinationsValuesSuccessAction {\r\n    type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_SUCCESS;\r\n    payload: DestinationValues[];\r\n}\r\ninterface PushDestinationsValuesErrorAction {\r\n    type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type DestinationsValuesAction = FetchDestinationsValuesAction\r\n    | FetchDestinationsValuesSuccessAction\r\n    | FetchDestinationsValuesErrorAction\r\n    | PushDestinationsValuesAction\r\n    | PushDestinationsValuesSuccessAction\r\n    | PushDestinationsValuesErrorAction","import {Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\nimport {DestinationsValuesAction, DestinationsValuesActionTypes} from \"../../Types/destinationValues\";\r\n\r\nexport const fetchDestinationsValues = (idList:number[] = []) => {\r\n    return async (dispatch: Dispatch<DestinationsValuesAction>) => {\r\n        try {\r\n            dispatch({type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES})\r\n            const data:any = []\r\n            await idList.map( async (id) => {\r\n                const response = await axios.post(\"/destinations.getValues\", {\"destinationId\":id})\r\n                data.push(...response.data)\r\n            })\r\n            console.log(\"fetch\",data)\r\n            dispatch({type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_SUCCESS,payload:data})\r\n        } catch (e){\r\n            dispatch({type: DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_ERROR, payload: \"Ошибка загрузки данных из назначений\"})\r\n        }\r\n    }\r\n}\r\n\r\nexport const pushDestinationsValues = (destinationsValues:any = null) => {\r\n    return async (dispatch: Dispatch<DestinationsValuesAction>) => {\r\n        try {\r\n            dispatch({type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES})\r\n            const response = await axios.post(\"/destinations.createValues\",\r\n                {\r\n                    \"id\":destinationsValues.id,\r\n                    \"destination\": destinationsValues.destination,\r\n                    \"quarter\": destinationsValues.quarter,\r\n                    \"week\":destinationsValues.week,\r\n                    \"value\":destinationsValues.value,\r\n                    \"is_verified\":destinationsValues.is_verified\r\n                    })\r\n            dispatch({type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_SUCCESS,payload:response.data})\r\n        } catch (e){\r\n            dispatch({type: DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_ERROR, payload: \"Ошибка загрузки данных из назначений\"})\r\n        }\r\n    }\r\n}","import * as UserActionCreator from './users'\r\nimport * as DestinationActionCreator from './destinations'\r\nimport * as ProrectorsActionCreator from './prorectors'\r\nimport * as StructureActionCreator from './structure'\r\nimport * as RolesActionCreator from './roles'\r\nimport * as PositionsActionCreator from './positions'\r\nimport * as SingleUserActionCreator from './singleUser'\r\nimport * as UniversityActionCreator from './university'\r\nimport * as DestinationsValuesActionCreator from './destinationsValues'\r\nexport default {\r\n    ...UserActionCreator,\r\n    ...DestinationActionCreator,\r\n    ...ProrectorsActionCreator,\r\n    ...StructureActionCreator,\r\n    ...RolesActionCreator,\r\n    ...PositionsActionCreator,\r\n    ...SingleUserActionCreator,\r\n    ...UniversityActionCreator,\r\n    ...DestinationsValuesActionCreator\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport ActionCreators from \"../Store/ActionCreator/index\"\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(ActionCreators, dispatch)\r\n}","import React, {useEffect} from \"react\";\r\nimport {useTypedSelector} from \"../../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../../Hooks/useActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport css from \"../Header.module.css\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nconst ProsMenu: React.FC = () => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const {prorectors,loading,error} = useTypedSelector(state => state.prorectors)\r\n    const {fetchProrectors} = useActions()\r\n    const param = 'prorectors'\r\n\r\n    useEffect(()=> {\r\n        fetchProrectors()\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                <Button className={css.menu__navlink}>\r\n                    <NavLink\r\n                        className={css.navlink}\r\n                        to={`/statistic/${param}`}>\r\n                        Проректора\r\n                    </NavLink>\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}>\r\n                    <ArrowDropDownIcon />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                        }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\"\r\n                                >\r\n                                    {prorectors.map(prorector =>\r\n                                        <MenuItem\r\n                                            key={prorector.id} >\r\n                                            <NavLink\r\n                                                className={css.navlink}\r\n                                                to={`/user/${prorector.id}`}>\r\n                                                {prorector.lastname} {prorector.name.substr(0,1)}.{prorector.patronymic.substr(0,1)}\r\n                                            </NavLink>\r\n                                        </MenuItem>)}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class ProrectorsMenu extends React.Component {\r\n    render() {\r\n        return (\r\n            <ProsMenu/>\r\n        );\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {useTypedSelector} from \"../../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../../Hooks/useActions\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport css from \"../Header.module.css\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst UniverMenu: React.FC = () => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const {university,loading,error} = useTypedSelector(state => state.university)\r\n    const {fetchUniversity} = useActions()\r\n    const param = 'university'\r\n\r\n    useEffect(()=> {\r\n        fetchUniversity()\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                <Button className={css.menu__navlink}>\r\n                    <NavLink\r\n                        className={css.navlink}\r\n                        to={`/university/${param}`}>\r\n                        Университеты\r\n                    </NavLink>\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}>\r\n                    <ArrowDropDownIcon />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                        }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\"\r\n                                >\r\n                                    {university.map(univer =>\r\n                                        <MenuItem\r\n                                            key={univer.id} >\r\n                                            <NavLink\r\n                                                className={css.navlink}\r\n                                                to={`/user/${univer.id}`}>\r\n                                                {univer.lastname} {univer.name.substr(0,1)}.{univer.patronymic.substr(0,1)}\r\n                                            </NavLink>\r\n                                        </MenuItem>)}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class UniversityMenu extends React.Component {\r\n    render() {\r\n        return (\r\n            <UniverMenu/>\r\n        );\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {useTypedSelector} from \"../../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../../Hooks/useActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport css from \"../Header.module.css\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ReactComponent} from \"*.svg\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nconst StrMenu: React.FC = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const {structure,loading,error} = useTypedSelector(state => state.structure)\r\n    const {fetchStructure} = useActions()\r\n    const param = 'structure'\r\n\r\n    useEffect(()=> {\r\n        if(!structure.length){\r\n            fetchStructure()\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                <Button className={css.menu__navlink}>\r\n                    <NavLink\r\n                        className={css.navlink}\r\n                        to={`/statistic/${param}`}>\r\n                        Структуры\r\n                    </NavLink>\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}>\r\n                    <ArrowDropDownIcon />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                        }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\"\r\n                                >\r\n                                    {structure.map(struct =>\r\n                                        <MenuItem\r\n                                            key={struct.id} >\r\n                                            <NavLink\r\n                                                className={css.navlink}\r\n                                                to={`/user/${struct.id}`}>\r\n                                                {struct.lastname} {struct.name.substr(0,1)}.{struct.patronymic.substr(0,1)}\r\n                                            </NavLink>\r\n                                        </MenuItem>)}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class StructureMenu extends React.Component {\r\n    render() {\r\n        return (\r\n            <StrMenu/>\r\n        );\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\n\r\n// Import Material UI components\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nimport css from \"./Header.module.css\"\r\n\r\nimport ProrectorsMenu from \"./Menus/ProrectorsMenu\";\r\nimport UniversityMenu from \"./Menus/UniverMenu\";\r\nimport StructureMenu from \"./Menus/StructureMenu\";\r\n\r\nexport default class Header extends React.Component{\r\n    render() {\r\n        return (\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <Typography className=\"h1\">\r\n                        Мгуту Статистика\r\n                    </Typography>\r\n\r\n                    <Button className={css.menu__navlink}><a href={'/users'}>Пользователи</a></Button>\r\n\r\n                    <ProrectorsMenu/>\r\n                    <UniversityMenu/>\r\n                    <StructureMenu/>\r\n\r\n                    <Button>\r\n                        Работники\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n        );\r\n    }\r\n}","import {useTypedSelector} from \"../../Hooks/useTypeSelector\";\r\nimport Chart from \"react-google-charts\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useActions} from \"../../Hooks/useActions\";\r\nimport {List} from \"@material-ui/core\";\r\n\r\nexport function KPEDynamicTableQuarter(props:any) {\r\n    const {destinations,fetch_loading_destination,fetch_error_destination} = useTypedSelector(state => state.destinations)\r\n    const {destinationValues,fetch_loading_destinations_values,fetch_error_destinations_values} = useTypedSelector(state => state.destinationsValues)\r\n\r\n    const concreteDestination = destinations.filter(dest => dest.user == props.userId)\r\n\r\n    const [state,setstate] = useState({})\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() => setstate({}),1000)\r\n        return () => {\r\n            //Очистить данные\r\n        }\r\n    },[props.id])\r\n\r\n    console.log('concreteDestination',concreteDestination)\r\n    console.log(\"values\",destinationValues)\r\n    console.log(\"state\",state)\r\n\r\n    const result:any = {}\r\n\r\n    const mapDynamicDataKPI = concreteDestination\r\n                        .map( dest => (destinationValues\r\n                        .filter( fil => fil.destination == dest.id )\r\n                            .map( value => {\r\n                            console.log(\"val\",value)\r\n                            return ([value.week,value.value])\r\n                        }))).flat().\r\n        forEach((item, idx) => {\r\n            const [key, value] = item;\r\n            if (!result[key]) result[key] = [key, value];\r\n            else result[key] = [...result[key], value]\r\n        })\r\n    console.log('result',result)\r\n        let data = [\r\n        ['Неделя',...concreteDestination.flatMap(destination=>destination.name)], ...Object.keys(result).map(key => result[key])]\r\n\r\n    console.log('data',data)\r\n\r\n    return (\r\n        <Chart chartType=\"AreaChart\"\r\n               width={400}\r\n               height={400}\r\n               loader={<div>Loading chart</div>}\r\n               data={\r\n                   data\r\n               }\r\n               options={{\r\n                   title: 'Динамика выполнения КПЭ',\r\n                   chartArea: {width: '100%'}\r\n               }}\r\n               legendToggle\r\n        />\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useTypedSelector} from \"../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../Hooks/useActions\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport function KPETableCurrentDate(props:any){\r\n\r\n    const {destinations,fetch_loading_destination,fetch_error_destination} = useTypedSelector(state => state.destinations)\r\n\r\n    const concreteDestination = destinations.filter(dest => dest.user == props.userId)\r\n\r\n    let data = [[\"Неделя\",\"Значение\"],...concreteDestination.map(destination => ([destination.name,destination.percent_completion]))]\r\n\r\n    return (\r\n        <Chart chartType={\"ColumnChart\"}\r\n               width={400}\r\n               height={400}\r\n               loader={<div>Loading chart</div>}\r\n               data={\r\n                   data\r\n               }\r\n               options={{\r\n                   title: 'Выполнение КПЭ(на текущую дату)',\r\n                   chartArea: {width: '100%'}\r\n               }}\r\n               legendToggle\r\n        />\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\"\r\n\r\n//Импорт элементов из библиотеки Material Ui\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Grid,\r\n    Typography, Button,\r\n} from \"@material-ui/core\";\r\nimport {DataGrid, GridColDef} from \"@material-ui/data-grid\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n//Импорт css модуля для стилизации объектов\r\nimport css from './Profile.module.css'\r\n\r\n//Компоненты Redux\r\nimport {useTypedSelector} from \"../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../Hooks/useActions\";\r\nimport {fetchPositions} from \"../../Store/ActionCreator/positions\";\r\n\r\n//Импорт графиков\r\nimport {KPEDynamicTableQuarter} from \"../Charts/KPEDynamicTableQuarter\"\r\nimport {KPETableCurrentDate} from \"../Charts/KPETableCurrentDate\"\r\n\r\nconst DestinationsTable: React.FC =()=>{\r\n    const {id} = useParams<any>()\r\n\r\n    const {destinations,fetch_loading_destination,fetch_error_destination} = useTypedSelector(state => state.destinations)\r\n    const {destinationValues,fetch_loading_destinations_values,fetch_error_destinations_values} = useTypedSelector(state => state.destinationsValues)\r\n\r\n    const {fetchDestinations,fetchDestinationsValues} = useActions()\r\n\r\n    useEffect(()=>{\r\n        fetchDestinations(id)\r\n        fetchDestinationsValues(id)\r\n    },[])\r\n\r\n    const columns:GridColDef[] = [\r\n        { field: 'id', headerName: 'ID', width: 50 },\r\n        { field: 'name', headerName: 'Направление', width: 200 },\r\n        { field: 'performance_indicator', headerName: 'Показатель результативности, значение', width: 130 },\r\n        { field: 'verification_indicator_value', headerName: 'Верификация значения показателя (документ, курирующая служба)', width: 130 },\r\n        { field: 'verification', headerName: 'Тип верификации', width: 130,},\r\n        { field: 'plan', headerName: 'План на квартал', width: 130 },\r\n        { field: 'year', headerName: 'Должность', width: 130 },\r\n        { field: 'present_value', headerName: 'Текущее значение показателя', width: 130 },\r\n        { field: 'value', headerName: 'Значение', width: 130 },\r\n        { field: 'percent_completion', headerName: 'Процент выполнения', width: 130 },\r\n    ];\r\n\r\n    /*let data = [destinations.map(destination => { return[\r\n            [destination.name],\r\n            [destination.performance_indicator],\r\n            [destination.verification_indicator_value],\r\n            [destination.verification],\r\n            [destination.plan],\r\n            [destination.present_value]]}),\r\n        destinationValues.map(destinationValue => {return [destinationValue.value]})\r\n        ]*/\r\n    return (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid rows={[destinations,destinationValues]} columns={columns} />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"medium\"\r\n                className={css.button}\r\n                startIcon={<AddIcon/>}>\r\n                onClick={}\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nconst UserCard: React.FC = () =>  {\r\n    const {id} = useParams<any>()\r\n\r\n    const {user,loading_user,error_user} = useTypedSelector(state => state.user)\r\n    const {positions,loading_positions,error_positions} = useTypedSelector(state => state.positions)\r\n\r\n    const {fetchUser,fetchPositions} = useActions()\r\n\r\n    useEffect(()=> {\r\n        fetchPositions()\r\n        fetchUser(id)\r\n    },[id])\r\n\r\n    if(!user) return null\r\n\r\n    return (\r\n        <Card className={css.card}>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <CardMedia className={css.photo}\r\n                               image={user.img_link}/>\r\n                </Grid>\r\n                <div className={css.details}>\r\n                    <CardContent>\r\n                        <Grid item xl={6}>\r\n                            <Typography  className={css.position} variant='h4' component='h1'>{positions[user.position].position_name}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>{user.lastname} {user.name} {user.patronymic}</Typography>\r\n                        </Grid>\r\n                        <Grid item xl={6}>\r\n                            <Typography>Интегральное значение</Typography>\r\n                            <Typography>40%</Typography>\r\n                        </Grid>\r\n                        <Grid item xl={6}>\r\n                            <Typography>Исполнительная дисциплина</Typography>\r\n                            <Typography>20%</Typography>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </div>\r\n                <div>\r\n                    {/*<DestinationsTable/>*/}\r\n                </div>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function Profile(){\r\n        const {id} = useParams<any>()\r\n\r\n        const {destinations} = useTypedSelector( state => state.destinations)\r\n        const {destinationValues} = useTypedSelector(state => state.destinationsValues)\r\n        const {fetchDestinations,fetchDestinationsValues} = useActions()\r\n\r\n        useEffect( ()=> {\r\n            fetchDestinations(id)\r\n            console.log('id',id)\r\n        },[id])\r\n\r\n        useEffect(()=>{\r\n            if(destinations.length && !destinationValues.length && id){\r\n                let destfil = destinations.filter(dest => dest.user == id).map(item => item.id)\r\n\r\n                fetchDestinationsValues(destfil)\r\n            }\r\n        },[id,destinations.length,destinationValues.length])\r\n\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <UserCard/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <KPETableCurrentDate userId={id}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <KPEDynamicTableQuarter userId={id}/>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n\r\n}","import React, {useEffect} from \"react\";\r\nimport {DataGrid, GridColDef, GridRowsProp} from '@material-ui/data-grid';\r\nimport {useTypedSelector} from \"../../Hooks/useTypeSelector\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsers} from \"../../Store/ActionCreator/users\";\r\nimport {useActions} from \"../../Hooks/useActions\";\r\n\r\nconst columns:GridColDef[] = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'lastname', headerName: 'Фамилия', width: 130 },\r\n    { field: 'name', headerName: 'Имя', width: 130 },\r\n    { field: 'patronymic', headerName: 'Отчество', width: 130 },\r\n    { field: 'email', headerName: 'Почта', width: 130 },\r\n    { field: 'telephone', headerName: 'Телефон', width: 130,},\r\n    { field: 'position', headerName: 'Должность', width: 130 },\r\n    { field: 'role', headerName: 'Роль', width: 130 }\r\n];\r\n\r\nconst UsersTable: React.FC = () => {\r\n    const {users,error_user,loading_user} = useTypedSelector(state => state.users)\r\n    const {roles,error_roles,loading_roles} = useTypedSelector(state => state.roles)\r\n    const {positions,error_positions,loading_positions} = useTypedSelector(state => state.positions)\r\n\r\n    const {fetchUsers,fetchRoles,fetchPositions} = useActions()\r\n    \r\n    useEffect(()=>{\r\n        fetchUsers()\r\n        fetchRoles()\r\n        fetchPositions()\r\n    },[])\r\n\r\n    return (<div style={{ height: 400, width: '100%' }}>\r\n    <DataGrid rows={users} columns={columns} />\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction Users(){\r\n    return(\r\n        <UsersTable/>\r\n    );\r\n}\r\nexport default Users;","import {UserAction, UserActionTypes, UserState} from \"../../Types/user\";\r\n\r\nconst initialState: UserState = {\r\n    users: [],\r\n    loading_user: false,\r\n    error_user: null\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UserAction): UserState => {\r\n    switch(action.type){\r\n        case UserActionTypes.FETCH_USERS:\r\n           return {...state, loading_user: true}\r\n        case UserActionTypes.FETCH_USERS_SUCCESS:\r\n            return {...state,loading_user:false, users:action.payload}\r\n        case UserActionTypes.FETCH_USERS_ERROR:\r\n            return {...state, loading_user:false,error_user:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {DestinationsAction, DestinationsActionTypes, DestinationsState} from \"../../Types/destinations\";\r\n\r\nconst initialState: DestinationsState = {\r\n    destinations: [],\r\n    fetch_loading_destination:false,\r\n    fetch_error_destination: null,\r\n    push_loading_destination: false,\r\n    push_error_destination: null,\r\n    userId_destination: null\r\n}\r\nexport const destinationsReducer = (state= initialState,action: DestinationsAction) => {\r\n    switch (action.type){\r\n        case DestinationsActionTypes.FETCH_DESTINATIONS:\r\n            return {...state,fetch_loading_destination:true}\r\n        case DestinationsActionTypes.FETCH_DESTINATIONS_SUCCESS:\r\n            return {...state,fetch_loading_destination: false,destinations: action.payload}\r\n        case DestinationsActionTypes.FETCH_DESTINATIONS_ERROR:\r\n            return {...state,fetch_loading_destination: false,fetch_error_destination: action.payload}\r\n\r\n        case DestinationsActionTypes.PUSH_DESTINATIONS:\r\n            return {...state,push_loading_destination:true}\r\n        case DestinationsActionTypes.PUSH_DESTINATIONS_SUCCESS:\r\n            return {...state,push_loading_destination: false,destinations: action.payload}\r\n        case DestinationsActionTypes.PUSH_DESTINATIONS_ERROR:\r\n            return {...state,push_loading_destination: false,push_error_destination: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {ProrectorsAction, ProrectorsActionType, ProrectorsState} from \"../../Types/prorectors\";\r\n\r\n\r\nconst initialState: ProrectorsState = {\r\n    prorectors: [],\r\n    loading:false,\r\n    error: null,\r\n}\r\n\r\nexport const prorectorsReducer = (state= initialState,action: ProrectorsAction) => {\r\n    switch (action.type){\r\n        case ProrectorsActionType.FETCH_PRORECTORS:\r\n            return {...state,loading:true}\r\n        case ProrectorsActionType.FETCH_PRORECTORS_SUCCESS:\r\n            return {...state,loading: false,prorectors: action.payload}\r\n        case ProrectorsActionType.FETCH_PRORECTORS_ERROR:\r\n            return {...state,loading: false,error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {StructureAction, StructureActionTypes, StructureState} from \"../../Types/structure\";\r\n\r\nconst initialState: StructureState = {\r\n    structure : [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const structureReducer = (state = initialState, action: StructureAction) => {\r\n    switch(action.type){\r\n        case StructureActionTypes.FETCH_STRUCTURE:\r\n            return { ...state, loading: true}\r\n        case StructureActionTypes.FETCH_STRUCTURE_SUCCESS:\r\n            return {...state, loading: false, structure:action.payload}\r\n        case StructureActionTypes.FETCH_STRUCTURE_ERROR:\r\n            return {...state, loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {RolesAction, RolesActionTypes, RolesState} from \"../../Types/roles\";\r\n\r\n\r\nconst initialState: RolesState = {\r\n    roles: [],\r\n    loading_roles: false,\r\n    error_roles: null\r\n}\r\n\r\nexport const rolesReducer = (state = initialState, action: RolesAction) => {\r\n    switch(action.type){\r\n        case RolesActionTypes.FETCH_ROLES:\r\n            return {...state,loading_roles:true}\r\n        case RolesActionTypes.FETCH_ROLES_SUCCESS:\r\n            return {...state, loading_roles:false, roles:action.payload}\r\n        case RolesActionTypes.FETCH_ROLES_ERROR:\r\n            return { ...state,loading_roles:false,error_roles:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {PositionsAction, PositionsActionTypes, PositionsState} from \"../../Types/positions\";\r\n\r\n\r\nconst initialState: PositionsState = {\r\n    positions: [],\r\n    loading_positions: false,\r\n    error_positions: null\r\n}\r\n\r\nexport const positionsReducer = (state = initialState, action: PositionsAction) => {\r\n    switch(action.type){\r\n        case PositionsActionTypes.FETCH_POSITIONS:\r\n            return {...state,loading_positions:true}\r\n        case PositionsActionTypes.FETCH_POSITIONS_SUCCESS:\r\n            return {...state,loading_positions:false, positions:action.payload}\r\n        case PositionsActionTypes.FETCH_POSITIONS_ERROR:\r\n            return {...state,loading_positions:false,error_positions:action.payload,}\r\n        default:\r\n            return state\r\n    }\r\n}","import {UserSingleAction, UserSingleActionTypes, UserSingleState} from \"../../Types/singleUser\";\r\n\r\nconst initialState: UserSingleState = {\r\n    user: undefined ,\r\n    loading_user: false,\r\n    error_user: null\r\n}\r\n\r\nexport const singleUserReducer = (state = initialState, action: UserSingleAction): UserSingleState => {\r\n    switch(action.type){\r\n        case UserSingleActionTypes.FETCH_SINGLE_USER:\r\n            return {...state, loading_user: true}\r\n        case UserSingleActionTypes.FETCH_SINGLE_USER_SUCCESS:\r\n            return {...state,loading_user:false, user:action.payload}\r\n        case UserSingleActionTypes.FETCH_SINGLE_USER_ERROR:\r\n            return {...state, loading_user:false,error_user:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {UniversityAction, UniversityActionTypes, UniversityState} from \"../../Types/university\";\r\n\r\n\r\nconst initialState: UniversityState = {\r\n    university: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const universityReducer = (state = initialState, action: UniversityAction) => {\r\n    switch(action.type){\r\n        case UniversityActionTypes.FETCH_UNIVERSITY:\r\n            return { ...state, loading: true}\r\n        case UniversityActionTypes.FETCH_UNIVERSITY_SUCCESS:\r\n            return {...state, loading: false, university:action.payload}\r\n        case UniversityActionTypes.FETCH_UNIVERSITY_ERROR:\r\n            return {...state, loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    DestinationsValuesAction,\r\n    DestinationsValuesActionTypes,\r\n    DestinationsValuesState\r\n} from \"../../Types/destinationValues\";\r\n\r\nconst initialState: DestinationsValuesState = {\r\n    destinationValues: [],\r\n    fetch_loading_destinations_values: false,\r\n    fetch_error_destinations_values: null,\r\n    push_loading_destinations_values: false,\r\n    push_error_destinations_values: null,\r\n    userId_destinations_values: null\r\n}\r\nexport const destinationsValuesReducer = (state= initialState,action: DestinationsValuesAction) => {\r\n    switch (action.type){\r\n        case DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES:\r\n            return {...state,fetch_loading_destinations_values:true}\r\n        case DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_SUCCESS:\r\n            console.log('payload',action.payload)\r\n            return {...state,fetch_loading_destinations_values: false,destinationValues: action.payload}\r\n        case DestinationsValuesActionTypes.FETCH_DESTINATIONS_VALUES_ERROR:\r\n            return {...state,fetch_loading_destinations_values: false,fetch_error_destinations_values: action.payload}\r\n\r\n        case DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES:\r\n            return {...state,push_loading_destinations_values:true}\r\n        case DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_SUCCESS:\r\n            return {...state,push_loading_destinations_values: false,destinationValues: action.payload}\r\n        case DestinationsValuesActionTypes.PUSH_DESTINATIONS_VALUES_ERROR:\r\n            return {...state,push_loading_destinations_values: false,push_error_destinations_values: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {destinationsReducer} from \"./destinationsReducer\";\r\nimport {prorectorsReducer} from \"./prorectorsReducer\";\r\nimport {structureReducer} from \"./structureReducer\";\r\nimport {rolesReducer} from \"./rolesReducer\"\r\nimport {positionsReducer} from \"./positionsReducer\";\r\nimport {singleUserReducer} from \"./singleUserReducer\";\r\nimport {universityReducer} from \"./universityReducer\";\r\nimport {destinationsValuesReducer} from \"./destinationsValuesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    destinations : destinationsReducer,\r\n    prorectors: prorectorsReducer,\r\n    structure: structureReducer,\r\n    roles: rolesReducer,\r\n    positions: positionsReducer,\r\n    user: singleUserReducer,\r\n    university: universityReducer,\r\n    destinationsValues: destinationsValuesReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport {rootReducer} from \"./Reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nexport const store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        )/*,\r\n        //@ts-ignore\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/\r\n    ))","import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useTypedSelector} from \"../../Hooks/useTypeSelector\";\r\nimport {useActions} from \"../../Hooks/useActions\";\r\nimport {Card, CardContent, CardMedia, Grid, Typography} from \"@material-ui/core\";\r\nimport css from \"../Profile/Profile.module.css\";\r\nimport {User} from \"../../Types/user\"\r\n//Импорт графиков\r\nimport {KPEDynamicTableQuarter} from \"../Charts/KPEDynamicTableQuarter\"\r\nimport {KPETableCurrentDate} from \"../Charts/KPETableCurrentDate\"\r\nimport {fetchDestinations} from \"../../Store/ActionCreator/destinations\";\r\nimport {fetchDestinationsValues} from \"../../Store/ActionCreator/destinationsValues\";\r\nimport Users from \"../UsersPage/UsersPage\";\r\n\r\nfunction AdvancedUserCard(props: any) {\r\n\r\n    const {users} = useTypedSelector(state => state.users)\r\n    const {positions} = useTypedSelector(state => state.positions)\r\n\r\n    const selectedUser = users.find(value => value.id == props.userId)\r\n\r\n    if (!selectedUser) return null\r\n\r\n    return (\r\n        <Card>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <CardMedia className={css.photo}\r\n                               image={selectedUser.img_link}/>\r\n                </Grid>\r\n                <div className={css.details}>\r\n                    <CardContent>\r\n                        <Grid item xl={6}>\r\n                            <Typography className={css.position} variant='h4'\r\n                                        component='h1'>{positions[selectedUser.position].position_name}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>{selectedUser.lastname} {selectedUser.name} {selectedUser.patronymic}</Typography>\r\n                        </Grid>\r\n                        <Grid item xl={6}>\r\n                            <Typography>Интегральное значение</Typography>\r\n                            <Typography>40%</Typography>\r\n                        </Grid>\r\n                        <Grid item xl={6}>\r\n                            <Typography>Исполнительная дисциплина</Typography>\r\n                            <Typography>20%</Typography>\r\n                        </Grid>\r\n                        <KPETableCurrentDate userId={selectedUser.id}/>\r\n                        <KPEDynamicTableQuarter userId={selectedUser.id}/>\r\n                    </CardContent>\r\n                </div>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function CompositeStatistic() {\r\n\r\n    const {usertype} = useParams<any>()\r\n\r\n    const {prorectors} = useTypedSelector(state => state.prorectors)\r\n    const {structure} = useTypedSelector(state => state.structure)\r\n    const {university} = useTypedSelector(state => state.university)\r\n    const {destinations} = useTypedSelector(state => state.destinations)\r\n    const {users} = useTypedSelector(state => state.users)\r\n\r\n    const {fetchUser} = useActions()\r\n\r\n    let param = Array()\r\n\r\n    switch (usertype) {\r\n        case 'prorectors':\r\n            param = prorectors\r\n            break;\r\n        case 'structure':\r\n            param = structure\r\n            break;\r\n        case 'university':\r\n            param = university\r\n            break;\r\n    }\r\n    console.log(param)\r\n\r\n    useEffect(() => {\r\n       //param.map(elem => fetchDestinations(elem.id), destinations.map(dest =>fetchDestinationsValues(dest.id)))\r\n    }, [])\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div>\r\n        {param.map(user => <AdvancedUserCard userId={user.id}/>)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Header from \"./Components/Header/Header\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\"\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Users from \"./Components/UsersPage/UsersPage\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./Store\";\r\nimport CompositeStatistic from \"./Components/CompositeStatistic/CompositeStatistic\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Header/>\r\n            {/*<Route path='/main' component={}/>*/}\r\n            <Route path='/users' component={Users}/>\r\n            <Route path='/user/:id' component={Profile}/>\r\n            <Route path='/statistic/:usertype' component={CompositeStatistic}/>\r\n        </BrowserRouter>\r\n        </Provider>\r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"Header_navlink__3CAPC\",\"menu__navlink\":\"Header_menu__navlink__3Gy4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Profile_card__1Zq9J\",\"photo\":\"Profile_photo__2B5iz\",\"position\":\"Profile_position__2KxDk\",\"details\":\"Profile_details__36fEr\",\"button\":\"Profile_button__2OAuP\"};"],"sourceRoot":""}